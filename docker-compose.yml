# Description: This file is used to run the application in a docker container
# to run use the command: docker-compose -f docker-compose.yml --env-file=./.env up --build

version: "3.8"

x-postgres-variables: &postgres-variables
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_PORT: ${POSTGRES_PORT}

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
      - "3001:3001"
      - "8001:8001"
    environment:
      <<: *postgres-variables
      GRPC_PORT: :5001
      JAEGER_HOST_PORT: ${HOST_DOCKER_INTERNAL}:6831
      POSTGRES_HOST: ${HOST_DOCKER_INTERNAL}
      REDIS_ADDR: redis:6379
      MIGRATIONS_DB_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${HOST_DOCKER_INTERNAL}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable
    depends_on:
      - postgres
      - redis
      - prometheus
      - node_exporter
      - grafana
    restart: always
    networks:
      - user_network

  redis:
    image: redis:7.0.7-alpine
    container_name: user_redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - user_network

  postgres:
    image: postgres:14.6-alpine
    container_name: user_postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: always
    environment: *postgres-variables
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - user_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus_container
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    networks:
      - user_network

  node_exporter:
    container_name: node_exporter_container
    image: prom/node-exporter
    ports:
      - '9101:9100'
    networks:
      - user_network

  grafana:
    container_name: grafana_container
    image: grafana/grafana
    ports:
      - '3000:3000'
    networks:
      - user_network

  jaeger:
    container_name: jaeger_container
    restart: always
    image: jaegertracing/all-in-one:1.21
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    networks:
      - user_network

networks:
  user_network:
    driver: bridge